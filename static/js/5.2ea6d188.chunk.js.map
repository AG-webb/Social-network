{"version":3,"sources":["hoc/withAuthRedirect.jsx","components/Dialogs/Dialogs.module.css","components/Dialogs/Dialog/Dialog.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/Dialog/Dialog.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Dialog","className","style","dialog","id","activeClassName","active","name","Message","message","text","maxLength10","maxLength","AddDialogsFormRedux","reduxForm","form","addDialogs","onSubmit","handleSubmit","Field","placeholder","component","TextArea","validate","required","Dialogs","dialogElements","dialogs","map","key","messageElements","messages","wrapper","formData","addDialog","newDialogtext","compose","dialogsPage","newMessageText"],"mappings":"6MAIIA,EAA6B,SAACC,GAC9B,MAAO,CACHC,OAAQD,EAAME,KAAKD,SAIdE,EAAmB,SAACC,GAAe,IAEtCC,EAFqC,uKAInC,OAAIC,KAAKC,MAAMN,OAER,kBAACG,EAAcE,KAAKC,OAFK,kBAAC,IAAD,CAAUC,GAAI,eAJX,GAEXC,IAAML,WAQtC,OAAOM,YAAQX,EAARW,CAAoCL,K,oBCnB/CM,EAAOC,QAAU,CAAC,QAAU,yBAAyB,QAAU,yBAAyB,SAAW,0BAA0B,WAAa,8B,oBCA1ID,EAAOC,QAAU,CAAC,OAAS,uBAAuB,OAAS,yB,oBCA3DD,EAAOC,QAAU,CAAC,QAAU,2B,wGCabC,EAVA,SAACN,GACZ,OACI,yBAAKO,UAAWC,IAAMC,QAClB,kBAAC,IAAD,CAASR,GAAE,mBAAcD,EAAMU,IAAMC,gBAAiBH,IAAMI,QACvDZ,EAAMa,Q,kBCGRC,EARC,SAACd,GACb,OACI,yBAAKO,UAAWC,IAAMO,SACjBf,EAAMgB,O,kCCEfC,EAAcC,YAAU,IAWtBC,EAAsBC,YAAU,CAClCC,KAAM,iBADkBD,EATN,SAACpB,GACnB,OACI,0BAAMO,UAAWC,IAAMc,WAAYC,SAAUvB,EAAMwB,cAC/C,kBAACC,EAAA,EAAD,CAAOlB,UAAU,WAAWmB,YAAY,qBAAqBb,KAAM,gBAAiBc,UAAWC,IAAUC,SAAU,CAACC,IAAUb,KAC9H,4BAAQV,UAAU,cAAlB,kBAkCGwB,EAzBC,SAAC/B,GACb,IAAIgC,EAAiBhC,EAAMiC,QACtBC,KAAI,SAAAzB,GAAM,OAAI,kBAAC,EAAD,CAAQI,KAAMJ,EAAOI,KAAMH,GAAID,EAAOC,GAAIyB,IAAK1B,EAAOC,QAErE0B,EAAkBpC,EAAMqC,SACvBH,KAAI,SAAAnB,GAAO,OAAI,kBAAC,EAAD,CAASC,KAAMD,EAAQA,QAASoB,IAAKpB,EAAQL,QAOjE,OACI,yBAAKH,UAAWC,IAAM8B,SAClB,yBAAK/B,UAAWC,IAAMyB,SACjBD,GAEL,yBAAKzB,UAAWC,IAAM6B,UACjBD,GAEL,kBAACjB,EAAD,CAAqBI,SAbX,SAACgB,GACfvC,EAAMwC,UAAUD,EAASE,oB,iCChBlBC,4BACXvC,aATkB,SAACV,GACnB,MAAO,CACHwC,QAASxC,EAAMkD,YAAYV,QAC3BI,SAAU5C,EAAMkD,YAAYN,SAC5BO,eAAgBnD,EAAMkD,YAAYC,kBAKb,CACrBJ,gBAEJ5C,IAJW8C,CAKbX","file":"static/js/5.2ea6d188.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) { return <Redirect to={\"/login\"}/> }  \r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Dialogs_wrapper__1oUfz\",\"dialogs\":\"Dialogs_dialogs__3DS8t\",\"messages\":\"Dialogs_messages__2LrJ3\",\"addDialogs\":\"Dialogs_addDialogs__2xeD7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialog_dialog__sHOzE\",\"active\":\"Dialog_active__3X-71\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__2louD\"};","import React from 'react'\r\nimport style from './Dialog.module.css'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Dialog = (props) => {\r\n    return (\r\n        <div className={style.dialog}>\r\n            <NavLink to={`/dialogs/${props.id}`} activeClassName={style.active}>\r\n                {props.name}\r\n            </NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialog;","import React from 'react'\r\nimport style from './Message.module.css'\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={style.message}>\r\n            {props.text}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport style from './Dialogs.module.css';\r\nimport Dialog from './Dialog/Dialog';\r\nimport Message from './Message/Message';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { TextArea } from '../common/FormElements/FormElements';\r\nimport { required, maxLength } from '../../utils/validators/validators';\r\n\r\nlet maxLength10 = maxLength(10);\r\n\r\nconst AddDialogForm = (props) => {\r\n    return(\r\n        <form className={style.addDialogs} onSubmit={props.handleSubmit}>\r\n            <Field className=\"textarea\" placeholder=\"Enter your message\" name={\"newDialogtext\"} component={TextArea} validate={[required, maxLength10]}/>\r\n            <button className=\"addBtn btn\" >Add dialog</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst AddDialogsFormRedux = reduxForm({\r\n    form: \"addDialogForm\"\r\n})(AddDialogForm);\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogElements = props.dialogs\r\n        .map(dialog => <Dialog name={dialog.name} id={dialog.id} key={dialog.id}/>);\r\n\r\n    let messageElements = props.messages\r\n        .map(message => <Message text={message.message} key={message.id}/>);\r\n\r\n    const addDialog = (formData) => {\r\n        props.addDialog(formData.newDialogtext);\r\n        // formData.newDialogtext = \"\";\r\n    }\r\n\r\n    return (\r\n        <div className={style.wrapper}>\r\n            <div className={style.dialogs}>\r\n                {dialogElements}\r\n            </div>\r\n            <div className={style.messages}>\r\n                {messageElements}\r\n            </div>\r\n            <AddDialogsFormRedux onSubmit={addDialog} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport Dialogs from './Dialogs';\r\nimport { addDialog } from \"../../redux/dialogs-reducer\";\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messages: state.dialogsPage.messages,\r\n        newMessageText: state.dialogsPage.newMessageText,\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        addDialog,\r\n    }),\r\n    withAuthRedirect,\r\n)(Dialogs);"],"sourceRoot":""}